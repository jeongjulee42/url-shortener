version: "3.8"

services:
  postgres:
    image: postgres:14
    container_name: pg-urlshortener
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
      POSTGRES_DB: shortener
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d   
    restart: always

  url-service:
    build: ./url-service
    container_name: url-service
    ports:
      - "3001:3001"
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: myuser
      PG_PASSWORD: mypass
      PG_DATABASE: shortener
      JWT_SECRET: mysupersecretkey
    depends_on:
      - postgres
    restart: always

  redirect-service:
    build: ./redirect-service
    container_name: redirect-service
    ports:
      - "3002:3002"
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: myuser
      PG_PASSWORD: mypass
      PG_DATABASE: shortener
      JWT_SECRET: mysupersecretkey
    depends_on:
      - postgres
    restart: always

  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "80:80"
    depends_on:
      - url-service
      - redirect-service
      - auth-service
    restart: always
    volumes:
      - ./nginx-logs:/var/log/nginx

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "3003:3003"
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: myuser
      PG_PASSWORD: mypass
      PG_DATABASE: shortener
      JWT_SECRET: mysupersecretkey
    depends_on:
      - postgres
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always

volumes:
  pgdata:
  grafana_data: